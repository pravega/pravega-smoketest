apply plugin: 'com.palantir.docker'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'

buildscript {
    ext.kotlin_version = '1.2.61'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceCompatibility = 1.8

sourceSets {
    intgTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }
}

idea {
    module {
        testSourceDirs += file('src/intgTest/java')
        testSourceDirs += file('src/intgTest/resources')
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "https://repository.apache.org/snapshots"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://oss.jfrog.org/jfrog-dependencies"
    }
    maven {
        url "http://asdrepo.isus.emc.com:8081/artifactory/nautilus-prerelease-local"
    }
}

dependencies {
    compile "io.pravega:pravega-client:${pravegaVersion}",
            "org.apache.commons:commons-text:${commonsTextVersion}",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
            "org.jetbrains.kotlin:kotlin-stdlib-jre8",
            "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}",
            "com.fasterxml.jackson.module:jackson-module-kotlin:${kotlinJacksonModule}",
            "javax.inject:javax.inject:1",
            "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}",
            "com.google.inject:guice:4.0",
            "io.dropwizard:dropwizard-core:${dropWizardVersion}",
            "io.dropwizard:dropwizard-configuration:${dropWizardVersion}"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

configurations.all {
    exclude group: "org.apache.logging.log4j", module: "log4j-slf4j-impl"
    exclude group: "org.slf4j", module: "log4j-over-slf4j"
}

configurations {
    intgTestCompile.extendsFrom testCompile
    intgTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    description = "Runs Integration Tests"
    testClassesDir = sourceSets.intgTest.output.classesDir
    classpath += sourceSets.intgTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

shadowJar {
    mergeServiceFiles()
    baseName = 'pravega-smoketest'
    version = buildVersion
}

docker {
    files shadowJar.outputs, 'dist/'
    name "${dockerRegistry}/${dockerImageName}:${buildVersion}"
    dockerfile file('docker/Dockerfile')
    buildArgs([BUILD_VERSION: project.buildVersion])
}